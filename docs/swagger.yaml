basePath: /api/v1
definitions:
  models.CreateVideoRequest:
    properties:
      description:
        example: 这是一个示例视频
        type: string
      name:
        example: 示例视频
        type: string
      status:
        example: active
        type: string
      url:
        example: http://example.com/video.flv
        type: string
    required:
    - name
    - url
    type: object
  models.FlvVideo:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        example: 这是一个示例视频
        type: string
      id:
        type: integer
      name:
        example: 示例视频
        type: string
      status:
        example: active
        type: string
      updated_at:
        type: string
      url:
        example: http://example.com/video.flv
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A video player service that supports FLV format.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Go FLV Player API
  version: "1.0"
paths:
  /:
    get:
      description: Get the main player page
      produces:
      - text/html
      responses:
        "200":
          description: HTML page
          schema:
            type: string
      summary: Get player page
      tags:
      - pages
  /admin:
    get:
      description: Get the admin management page
      produces:
      - text/html
      responses:
        "200":
          description: HTML page
          schema:
            type: string
      summary: Get admin page
      tags:
      - admin
  /api/v1/videos:
    get:
      description: Get list of all FLV videos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FlvVideo'
            type: array
      summary: Get all FLV videos
      tags:
      - admin
    post:
      consumes:
      - application/json
      description: Create a new FLV video entry
      parameters:
      - description: Video data
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/models.CreateVideoRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.FlvVideo'
      summary: Create a new FLV video
      tags:
      - admin
  /api/v1/videos/{id}:
    delete:
      description: Delete a FLV video entry
      parameters:
      - description: Video ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a FLV video
      tags:
      - admin
    put:
      consumes:
      - application/json
      description: Update an existing FLV video entry
      parameters:
      - description: Video ID
        in: path
        name: id
        required: true
        type: integer
      - description: Video data
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/models.CreateVideoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FlvVideo'
      summary: Update a FLV video
      tags:
      - admin
  /video:
    get:
      description: Get the video player page with a specific URL
      parameters:
      - description: Video URL
        in: query
        name: url
        required: true
        type: string
      produces:
      - text/html
      responses:
        "200":
          description: HTML page
          schema:
            type: string
      summary: Get video page
      tags:
      - pages
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
